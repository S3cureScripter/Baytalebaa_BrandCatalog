<?php
/**
 * @category   Baytalebaa
 * @package    Baytalebaa_Shops
 * @author     m.ashraf@baytalebaa.com
 * @copyright  This file was generated by using Module Creator(http://code.vky.co.in/magento-2-module-creator/) provided by VKY <viky.031290@gmail.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

namespace Baytalebaa\Shops\Model;

use Magento\Framework\Model\AbstractModel;
use Magento\Catalog\Api\CategoryRepositoryInterface;
use Magento\Framework\Exception\NoSuchEntityException;
use Magento\Framework\UrlInterface;

class Subcatalogs extends AbstractModel
{
    protected $categoryRepository;
    protected $urlBuilder;

    public function __construct(
        \Magento\Framework\Model\Context $context,
        \Magento\Framework\Registry $registry,
        CategoryRepositoryInterface $categoryRepository,
        UrlInterface $urlBuilder,  // Inject the UrlInterface to get the base URL
        array $data = []
    ) {
        $this->categoryRepository = $categoryRepository;
        $this->urlBuilder = $urlBuilder;
        parent::__construct($context, $registry, null, null, $data);
    }

    /**
     * Define resource model
     */
    protected function _construct()
    {
        $this->_init('Baytalebaa\Shops\Model\ResourceModel\Subcatalogs');
    }

    public function getTitle()
    {
        return $this->getData('title');
    }

    public function getContact()
    {
        return $this->getData('contact');
    }

    public function getImage()
    {
        return $this->getData('image');
    }

    public function getImageUrl()
    {
        $image = $this->getImage();
        if ($image) {
            return $this->urlBuilder->getBaseUrl(['_type' => UrlInterface::URL_TYPE_MEDIA]) . 'subcatalog/' . $image;
        }
        return null;
    }

    public function getUrlSlug()
    {
        return $this->getData('url_slug');
    }

    public function getCatalog()
    {
        return $this->getData('catalog_id');
    }

    public function getShop()
    {
        return $this->getData('shop_id');
    }

    public function getCatalogData($catalogId)
    {
        try {
            $catalog = $this->categoryRepository->get($catalogId);
            return $catalog->getData();
        } catch (NoSuchEntityException $e) {
            return [];
        }
    }
}